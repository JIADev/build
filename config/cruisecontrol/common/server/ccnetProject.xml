<?xml version="1.0"?>
<cb:config-template xmlns:cb="urn:ccnet.config.builder">
<cb:define
    project-root="ccnet-$(ccBuildServer)"
    />
<project name="hg-$(ccBuildServer)" category="ccnet" queue="mercurial">
    <triggers>
      <intervalTrigger seconds="60" />
    </triggers>
    <sourcecontrol 
	type="hg" 
	workingDirectory="$(srcroot)/master"
	repo="$(repo-source-root)/customers/master"
	autoGetSource="true" 
	timeout="12000000"
	multipleHeadsFail="false"
	tagOnSuccess="false"
	commitModifications="false"
	commitUntracked="false"
	purgeModifications="false"
	revertModifications="false"
	committerName="CruiseControl.NET"
	>
    </sourcecontrol>
</project>
  <project name="$(project-root)" category="ccnet" queue="ccnet">
    <cb:define db-server="" />
    <cb:define db-user="" />
    <cb:define db-password="" />

    <triggers>
      <intervalTrigger seconds="60" />
    </triggers>
    <sourcecontrol 
	type="hg" 
	workingDirectory="$(ccNetSourceWorkingDir)"
	repo="$(ccNetConfigRepo)"
	autoGetSource="true" 
	timeout="12000000"
	multipleHeadsFail="false"
	tagOnSuccess="false"
	commitModifications="false"
	commitUntracked="false"
	purgeModifications="false"
	revertModifications="false"
	committerName="CruiseControl.NET"
	>
    </sourcecontrol>
    <tasks>
    <conditional description="Delete working folder">
      <conditions>
	<folderExistsCondition folder="$(project-folder)" />>
      </conditions>
      <tasks>
	<exec executable="$(cmdExe)" 
	      baseDirectory="$(ccroot)" 
	      description="Delete working folder" 
	      successExitCodes="0"> 
	  <buildArgs>/c "rmdir /s/q $(project-folder)"</buildArgs>
	</exec>
      </tasks>
    </conditional>
	<exec executable="$(cmdExe)" 
	      baseDirectory="$(ccroot)" 
	      description="recreate working folder" 
	      successExitCodes="0"> 
	  <buildArgs>/c "mkdir $(project-folder)"</buildArgs>
	</exec>
      <exec executable="$(cmdExe)"
	    description="Update $(global_feature_dir)"
	    buildArgs="/c  hg pull -u"
	    baseDirectory="$(global_feature_dir)" />

      <exec executable="$(cmdExe)"
	    description="Copy common config files to working folder"
	    buildArgs='/c copy "$(ccnetConfigSource)\common\server\*" "$(project-folder)"' />
      <exec executable="$(cmdExe)" 
	    description="Copy server-specific config files to working folder"
	    buildArgs='/c copy "$(ccnetConfigSource)\$(ccBuildServer)\server\*" "$(project-folder)"' />
      <exec 
	  description="Validate configuration"
	  executable="$(ccNetServer)\CCValidator.exe"
	  buildArgs="$(project-folder)\ccnet.config --nogui --format=xml --logfile=$(ccnetLogDir)\configLog.xml" />
      
      <msbuild logger="$(msBuildListenerDll)" description="Copy dashboard config to server webdashboard if different" executable="$(msbuild)" projectFile="$(global_feature_dir)\buildtools.proj" targets="CopyFilesIfDifferent" workingDirectory="$(project-folder)">
	<buildArgs>/p:SourceDir="$(ccnetConfigSource)\$(ccBuildServer)\webdashboard" /p:TargetDir="$(ccNetWebDashboard)"</buildArgs>
      </msbuild>

      <msbuild logger="$(msBuildListenerDll)" description="Copy working folder files to server config folder if different" executable="$(msbuild)" projectFile="$(global_feature_dir)\buildtools.proj" targets="CopyFilesIfDifferent" workingDirectory="$(project-folder)">
	<buildArgs>/p:SourceDir="$(project-folder)" /p:TargetDir="$(ccNetServer)"</buildArgs>
      </msbuild>

    </tasks>
    <publishers>
      <xmllogger logDir="$(ccnetLogDir)" />
    </publishers>
  </project>  
</cb:config-template>
  
