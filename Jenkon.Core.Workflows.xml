<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Jenkon.Core.Workflows</name>
    </assembly>
    <members>
        <member name="T:Jenkon.Core.Workflows.Validation">
            <summary>
            contains validation methods
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Validation.RequiredString(System.String)">
            <summary>
            thows ValidationException if string null or empty
            </summary>
            <param name="test">string to test</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.Validation.RequiredId(System.Int32)">
            <summary>
            throws ValidationException if ID is not set
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Jenkon.Core.Workflows.Validation.ValidateRequiredProperties(System.Object)">
            <summary>
            Checks for values in all properties with [Required].
            </summary>
            <param name="objectToValidate"></param>
        </member>
        <member name="M:Jenkon.Core.Workflows.Validation.LoadComponentContent(Jenkon.Core.Workflows.ComponentBase)">
            <summary>
            Loads all [Content] properties based on IResourceFlow.
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Jenkon.Core.Workflows.Validation.UpdateContentFromComponent(Jenkon.Core.Workflows.ComponentBase)">
            <summary>
            Updates IResourceFlow with values from [Content] attributes.
            </summary>
            <param name="component"></param>
        </member>
        <member name="T:Jenkon.Core.Workflows.CodeWorkflowBase`3">
            <summary>
            Provides convenience methods for dealing with components
            that implement ICode.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.WorkflowBase">
            <summary>
            Base class for workflows
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.WorkflowBase.ValidateArg(Jenkon.Core.Workflows.ComponentBase,System.String)">
            <summary>
            Throws ArgumentNullException if argument is null, otherwise calls Validate().
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.ICodeWorkflow`2">
            <summary>
            Generic interface for workflows that work with ICode components.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICodeWorkflow`2.Create(`0)">
            <summary>
            Inserts the component into the data repository.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICodeWorkflow`2.Update(`0)">
            <summary>
            Updates an existing component in the data repository.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICodeWorkflow`2.Exists(`1)">
            <summary>
            Checks to see if the given code is in use for this component
            type.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICodeWorkflow`2.GetByCode(`1)">
            <summary>
            Returns the component for the given code, if one exists.
            </summary>
            Otherwise, returns null.
        </member>
        <member name="M:Jenkon.Core.Workflows.ICodeWorkflow`2.Delete(`1)">
            <summary>
            Deletes the component for the given code, if it exists.
            </summary>
            Throws NoSuchObject exception if no match is found.
        </member>
        <member name="M:Jenkon.Core.Workflows.ICodeWorkflow`2.GetAll">
            <summary>
            Returns all the components of this type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICodeWorkflow`2.GetByCodes(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Returns all the components that match the given codes
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICodeWorkflow`2.Search(System.String,System.Int32)">
            <summary>
            Retrieves components matching criteria
            </summary>
            <param name="criteria">Search code for matching criteria text</param>
            <param name="count">Limit the number of components returned</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.#ctor(Jenkon.Core.Kernel.ILogService,Jenkon.Core.Workflows.IResourceFlow)">
            <summary>
            Protected constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.CreateContext">
            <summary>
            Generates a context for each operation
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.Create(`0)">
            <summary>
            Inserts the component into the data repository.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.Update(`0)">
            <summary>
            Updates an existing component in the data repository.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.UpdateCore(`2,`0)">
            <summary>
            Performs the component-specific work of updating.
            </summary>
            The Update method provides all the necessary validation.
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.Exists(`1)">
            <summary>
            Checks to see if the given code is in use for this component
            type.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.GetByCode(`1)">
            <summary>
            Returns the component for the given code, if one exists.
            </summary>
            Otherwise, returns null.
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.GetByCodes(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Returns all the components that match the given codes
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.Search(System.String,System.Int32)">
            <summary>
            Retrieves components matching criteria
            </summary>
            <param name="criteria">Search code for matching criteria text</param>
            <param name="count">Limit the number of components returned</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.GetByCodesCore(`2,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Gets all the components that match the given codes
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.Delete(`1)">
            <summary>
            Deletes the component for the given code, if it exists.
            </summary>
            Throws NoSuchObject exception if no match is found.
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.GetAll">
            <summary>
            Returns all the components of this type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.GetAllCore(`2)">
            <summary>
            Performs the component-specific work of GetAll()
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.DeleteCore(`2,`1)">
            <summary>
            Performs the component-specific work of deletion
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.GetByCodeCore(`2,`1)">
            <summary>
            Performs the component-specific work of GetByCode
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.ExistsCore(`2,`1)">
            <summary>
            Performs the component-specific work of Exists.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.CreateCore(`2,`0)">
            <summary>
            Performs the component-specific work of Create.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.GenerateCode(`0)">
            <summary>
            Generates a code for the given component
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeWorkflowBase`3.SearchCore(`2,System.String,System.Int32)">
            <summary>
            Performs the component-specific work of Search.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.Default.CacheFlow">
            <summary>
            default implementation of ICacheFlow
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.ICacheFlow">
            <summary>
            A simple caching interface which can be implemented to hang on
            to values for future fast lookup
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICacheFlow.Add(System.String,System.String,System.Object)">
            <summary>
            Add an item to the cache
            </summary>
            <param name="context">The context in which this key/value pair exists.</param>
            <param name="key">The name of the value</param>
            <param name="value">The actual value to cache</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICacheFlow.Lookup(System.String,System.String)">
            <summary>
            Lookup an item in the cache, returns null if not found
            </summary>
            <param name="context">The name of the context in which the key/value pair exists</param>
            <param name="key">The name of the value</param>
            <returns>The value of the key within the context, or null if it does not ext</returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICacheFlow.Remove(System.String,System.String)">
            <summary>
            removes an item from the cache and 
            </summary>
            <param name="context">The name of the context in which the key/value pair exists</param>
            <param name="key">The name of the value</param>
            <returns></returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICacheFlow.Clear(System.String)">
            <summary>
            clears out the content of the given context's cache
            </summary>
            <param name="context">the name of the context to clear out</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICacheFlow.Clear">
            <summary>
            clears out all contexts' caches
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ICacheFlow.Add(System.String,System.String,System.Object,System.TimeSpan)">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.ICacheFlow.Add(System.String,System.String,System.Object,System.TimeSpan)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.CacheFlow.#ctor(Jenkon.Core.Kernel.ILogService,Jenkon.Core.Workflows.IAppSettingFlow)">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.CacheFlow.Add(System.String,System.String,System.Object)">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.ICacheFlow.Add(System.String,System.String,System.Object)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.CacheFlow.Add(System.String,System.String,System.Object,System.TimeSpan)">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.ICacheFlow.Add(System.String,System.String,System.Object,System.TimeSpan)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.CacheFlow.Lookup(System.String,System.String)">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.ICacheFlow.Lookup(System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.CacheFlow.Remove(System.String,System.String)">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.ICacheFlow.Remove(System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.CacheFlow.Clear(System.String)">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.ICacheFlow.Clear(System.String)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.CacheFlow.Clear">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.ICacheFlow.Clear"/>
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.IAppSettingFlow">
            <summary>
            Interface for application settings
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IAppSettingFlow.GetSetting(System.String)">
            <summary>
            Returns the value for the given setting. If the value is not found,
            an exception is thrown.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.Components.Theme">
            <summary>
            Web Site Theme
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.CodeComponent">
            <summary>
            Base class that provides some validation for things that have a Code attribute.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.IdComponent">
            <summary>
            Base class that provides 
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.ComponentBase">
            <summary>
            abstract base for components
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ComponentBase.Validate">
            <summary>
            Validates the component. Default implementation looks for [Required] attributes.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ComponentBase.SetValue(System.String,System.String@)">
            <summary>
            sets the destination value to the source value
            </summary>
            <param name="sourceValue">the new value</param>
            <param name="destinationValue">the variable we are setting</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.ComponentBase.InvalidField(System.String,System.Object)">
            <summary>
            This helper method can be called to throw a ValidationException for invalid
            field values.
            </summary>
            <param name="name">The name of the invalid field</param>
            <param name="value">The current (invalid) value for the field</param>
        </member>
        <member name="P:Jenkon.Core.Workflows.ComponentBase.Identifier">
            <summary>
            An identifier for this component, to be used in error messages.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.IId">
            <summary>
            Things that have an internal ID.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.IId.Id">
            <summary>
            The internal ID for the object.
            </summary>
        </member>
        <member name="F:Jenkon.Core.Workflows.IdComponent._Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.IdComponent.Id">
            <summary>
            Internal identifier
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.ICode`1">
            <summary>
            Things that have an identifying Code.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.ICode`1.Code">
            <summary>
            An identifier that is unique for all objects in a particular collection.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeComponent.#ctor(Jenkon.Core.Workflows.Code)">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.CodeComponent.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.CodeComponent.Identifier">
            <summary>
            Overridden to return Code.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.CodeComponent.Description">
            <summary>
            A short description for the object
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.CodeComponent.Code">
            <summary>
            Unique, human-readable identifier.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Components.Theme.#ctor(System.Int32,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Construct a filled Theme
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Components.Theme.Description">
            <summary>
             Describes theme and appropriate usage 
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Components.Theme.Enabled">
            <summary>
             Indicates if Theme is available for use 
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Components.Theme.Application">
            <summary>
             Application this theme can be used with
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.ValidationAttribute">
            <summary>
            Base class for validation attributes.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.ValidationAttribute.Validate(System.String,System.String,System.Object)">
            <summary>
            Checks that the value is valid. If not, throws a ValidationException explaining the problem.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.RequiredAttribute">
            <summary>
            Used to indicate a required field on a component.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.GreaterThanAttribute">
            <summary>
            Used to indicate a field must be greater than a given value
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.GreaterThanAttribute.#ctor(System.Decimal)">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.GreaterThanEqualAttribute">
            <summary>
            Used to indicate a field must be greater than a given value
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.GreaterThanEqualAttribute.#ctor(System.Decimal)">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.PositiveAttribute">
            <summary>
            Used to indicate a field must be greater than a given value
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.PositiveAttribute.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.NonNegativeAttribute">
            <summary>
            Used to indicate a field must be greater or equal to zero
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.NonNegativeAttribute.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.PrimaryAttribute">
            <summary>
            Used to indicate a primary key field on a component.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.Reference">
            <summary>
            Indicates that the property is a reference to an object of another type.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Reference.#ctor(System.Type)">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Reference.ReferenceType">
            <summary>
            The type of the referenced object
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.ContentAttribute">
            <summary>
            Indicates that a property should be treated as managed content. Only applicable on 
            string type properties.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.Default.ResourceFlow">
            <summary>
            <see cref="T:Jenkon.Core.Workflows.IResourceFlow"/>
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.IResourceFlow">
            <summary>
            Defines the interface for which string resources can be looked up.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IResourceFlow.GetString(System.String,System.String,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the string for the given context name / id and specified 
            culture, with fallback.
            </summary>
            <param name="resourceSet">The name of the resource set to use</param>
            <param name="context">The context, eg: page class name, where the resource resides</param>
            <param name="name">The id of the object needing the resource</param>
            <param name="property">The property name of the object needing the resource</param>
            <param name="culture">The desired culture</param>
            <returns>The string value</returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.IResourceFlow.SetString(System.String,System.String,System.String,System.String,System.Globalization.CultureInfo,System.String)">
            <summary>
            Defines the string content for the given key.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IResourceFlow.SetString(System.String,System.String,System.String,System.String)">
            <summary>
            Defines the string content for the given key.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IResourceFlow.GetString(System.String,System.String,System.String)">
            <summary>
            <see>GetString(string context, string id, CultureInfo culture)</see>
            uses the current thread culture
            </summary>
            <param name="context">The context, eg: page class name, where the resource resides</param>
            <param name="id">The id of the object needing the resource</param>
            <param name="property">The property name of the object needing the resource</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.IResourceFlow.ImportResources(System.String)">
            <summary>
            Loads resources from the given data.
            </summary>
            <param name="xml">A string containing the resource set and header comments.</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.IResourceFlow.GetThreadResourceSet">
            <summary>
            Gets the resource set for the currently executing thread
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IResourceFlow.SetThreadResourceSet(System.String)">
            <summary>
            Sets the resource set for the currently executing thread
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IResourceFlow.GetParents(System.String)">
            <summary>
            Returns all the parent resource sets for the given set.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.IResourceFlow.DefaultResourceSet">
            <summary>
            Determines the default resource set for the system.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.#ctor(Jenkon.Core.Workflows.ICacheFlow,Jenkon.Core.Workflows.IAppSettingFlow,Jenkon.Core.IConnectionFactory)">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.GetString(System.String,System.String,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.IResourceFlow.GetString(System.String,System.String,System.String,System.String,System.Globalization.CultureInfo)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.SetString(System.String,System.String,System.String,System.String,System.Globalization.CultureInfo,System.String)">
            <summary>
            Defines the string content for the given key.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.SetString(System.String,System.String,System.String,System.String)">
            <summary>
            Defines the string content for the given key.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.GetString(System.String,System.String,System.String)">
            <summary>
            <see cref="M:Jenkon.Core.Workflows.IResourceFlow.GetString(System.String,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.GetThreadResourceSet">
            <summary>
            Gets the resource set for the currently executing thread
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.SetThreadResourceSet(System.String)">
            <summary>
            Sets the resource set for the currently executing thread
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.GetParents(System.String)">
            <summary>
            Returns all the parent resource sets for the given set.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ResourceFlow.ImportResources(System.String)">
            <summary>
            Loads resources from the given data.
            </summary>
            <param name="xml">A string containing the resource set and header comments.</param>
        </member>
        <member name="P:Jenkon.Core.Workflows.Default.ResourceFlow.DefaultResourceSet">
            <summary>
            Determines the default resource set for the system.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.Default.ThemeFlow">
            <summary><see cref="T:Jenkon.Core.Workflows.IThemeFlow"></see></summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.IThemeFlow">
            <summary>
            Defines the interface for looking up web themes.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IThemeFlow.GetThemesByApplication(System.String)">
            <summary>
            Returns all themes for application
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IThemeFlow.GetThemesEnabledByApplication(System.String)">
            <summary>
            Returns available themes for application
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ThemeFlow.#ctor(Jenkon.Core.IConnectionFactory)">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ThemeFlow.GetThemesByApplication(System.String)">
            <summary><see cref="M:Jenkon.Core.Workflows.IThemeFlow.GetThemesByApplication(System.String)"></see></summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.ThemeFlow.GetThemesEnabledByApplication(System.String)">
            <summary><see cref="M:Jenkon.Core.Workflows.IThemeFlow.GetThemesEnabledByApplication(System.String)"></see></summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.Default.AppSettingFlow">
            <summary>
            Default implementation of IAppSettingFlow
            </summary>
        </member>
        <member name="F:Jenkon.Core.Workflows.Default.AppSettingFlow._CacheDuration">
            <summary>
            Time in seconds to keep settings cached.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.AppSettingFlow.#ctor(Jenkon.Core.IConnectionFactory)">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Default.AppSettingFlow.GetSetting(System.String)">
            <summary>
            Returns the value for the given setting. If the value is not found,
            an exception is thrown.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.Code">
            <summary>
            Represents the external identifier for some component.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.#ctor(System.String)">
            <summary>
            Constructs a code with the given value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.GetTypeCode">
            <summary>
            Returns the <see cref="T:System.TypeCode"></see> for this instance.
            </summary>
            
            <returns>
            The enumerated constant that is the <see cref="T:System.TypeCode"></see> of the class or value type that implements this interface.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToBoolean(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent Boolean value using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            A Boolean value equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToChar(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent Unicode character using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            A Unicode character equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToSByte(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 8-bit signed integer using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An 8-bit signed integer equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToByte(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 8-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An 8-bit unsigned integer equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToInt16(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 16-bit signed integer using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An 16-bit signed integer equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToUInt16(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 16-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An 16-bit unsigned integer equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToInt32(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 32-bit signed integer using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An 32-bit signed integer equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToUInt32(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 32-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An 32-bit unsigned integer equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToInt64(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 64-bit signed integer using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An 64-bit signed integer equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToUInt64(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 64-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An 64-bit unsigned integer equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToSingle(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent single-precision floating-point number using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            A single-precision floating-point number equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToDouble(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent double-precision floating-point number using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            A double-precision floating-point number equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToDecimal(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.Decimal"></see> number using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            A <see cref="T:System.Decimal"></see> number equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToDateTime(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.DateTime"></see> using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            A <see cref="T:System.DateTime"></see> instance equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToString(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.String"></see> using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            A <see cref="T:System.String"></see> instance equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an <see cref="T:System.Object"></see> of the specified <see cref="T:System.Type"></see> that has an equivalent value, using the specified culture-specific formatting information.
            </summary>
            
            <returns>
            An <see cref="T:System.Object"></see> instance of type conversionType whose value is equivalent to the value of this instance.
            </returns>
            
            <param name="provider">An <see cref="T:System.IFormatProvider"></see> interface implementation that supplies culture-specific formatting information. </param>
            <param name="conversionType">The <see cref="T:System.Type"></see> to which the value of this instance is converted. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.GetSchema">
            <summary>
            Returns the null to prevent this method from creating a schema
            </summary>
            <returns>XML Schema object.</returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the xml data into the value of this Code.
            </summary>
            <param name="reader">Xml Reader</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Sets the Value property from the Xml Writer
            </summary>
            <param name="writer">Xml Writer</param>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.QualifiedName(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Returns the qualified name for Code as just a string.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.ToString">
            <summary>
            Returns the string value of the code.
            </summary>
            <returns>Value property.</returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.op_Implicit(Jenkon.Core.Workflows.Code)~System.String">
            <summary>
            Implicitly coverts the code to a string.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.op_Implicit(System.String)~Jenkon.Core.Workflows.Code">
            <summary>
            Implicitly converts a string to a code.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.op_Equality(Jenkon.Core.Workflows.Code,Jenkon.Core.Workflows.Code)">
            <summary>
            overload == operator
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.Code.op_Inequality(Jenkon.Core.Workflows.Code,Jenkon.Core.Workflows.Code)">
            <summary>
            overload != operator
            </summary>	    
        </member>
        <member name="P:Jenkon.Core.Workflows.Code.Value">
            <summary>
            The code's value.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.LoginResult">
            <summary>
            Defines the given results of attemping to login.
            </summary>
        </member>
        <member name="F:Jenkon.Core.Workflows.LoginResult.OK">
            <summary>
            Login is ok.
            </summary>
        </member>
        <member name="F:Jenkon.Core.Workflows.LoginResult.BAD_USER">
            <summary>
            Bad user name.
            </summary>
        </member>
        <member name="F:Jenkon.Core.Workflows.LoginResult.BAD_PASSWORD">
            <summary>
            Bad password.
            </summary>
        </member>
        <member name="F:Jenkon.Core.Workflows.LoginResult.INACTIVE">
            <summary>
            Account is inactive.
            </summary>
        </member>
        <member name="F:Jenkon.Core.Workflows.LoginResult.NO_ACCOUNT">
            <summary>
            No account attached for this user.
            </summary>
        </member>
        <member name="F:Jenkon.Core.Workflows.LoginResult.NO_MATCHING_ACCOUNT">
            <summary>
            No account found for this user.
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.IUserFlow">
            <summary>
            Defines portal user-centric logic.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IUserFlow.ValidateLogin(System.String,System.String)">
            <summary>
            Checks the given username/password for validity.
            </summary>
            <param name="username">The username of the person logging in.</param>
            <param name="password">A user's clear text password.</param>
            <returns><see cref="T:Jenkon.Core.Workflows.LoginResult"/></returns>
        </member>
        <member name="M:Jenkon.Core.Workflows.IUserFlow.GetByAccount(System.String)">
            <summary>
            Returns all the users associated with a particular account.
            </summary>
        </member>
        <member name="M:Jenkon.Core.Workflows.IUserFlow.GetAllWithOutAccount">
            <summary>
            Returns all the users not associated to an account.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.IUserFlow.PasswordRegEx">
            <summary>
            Regular Expression Pattern used to validate passwords.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.IUserFlow.UserNameRegEx">
            <summary>
            Regular Expression Pattern user to validate user names.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.IUserFlow.Current">
            <summary>
            The current user for the thread
            </summary>
        </member>
        <member name="T:Jenkon.Core.Workflows.Components.User">
            <summary/>
        </member>
        <member name="P:Jenkon.Core.Workflows.Components.User.Account">
            <summary/>
        </member>
        <member name="P:Jenkon.Core.Workflows.Components.User.Culture">
            <summary/>
        </member>
        <member name="P:Jenkon.Core.Workflows.Components.User.Active">
            <summary/>
        </member>
        <member name="P:Jenkon.Core.Workflows.Components.User.Password">
            <summary/>
        </member>
        <member name="P:Jenkon.Core.Workflows.Components.User.Hint">
            <summary/>
        </member>
        <member name="T:Jenkon.Core.Workflows.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.CONNECTION_MUST_BE_SQL">
            <summary>
              Looks up a localized string similar to The connection must be of type SqlConnection for this operation..
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.ID_MISSING">
            <summary>
              Looks up a localized string similar to The ID property has not been set for object of type {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.NO_ENTERPRISE_CACHING">
            <summary>
              Looks up a localized string similar to Enterprise caching disabled, using standard caching.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.PK_NOT_DEFINED">
            <summary>
              Looks up a localized string similar to Primary key not defined.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.REQUIRED_FIELD_NULL_OR_EMPTY">
            <summary>
              Looks up a localized string similar to Object &quot;{0}&quot; is missing required field &quot;{1}&quot;.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.RESOURCE_SET_HAS_INVALID_PK">
            <summary>
              Looks up a localized string similar to Resource set has invalid primary key.
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.VALIDATION_MUST_BE_AT_LEAST">
            <summary>
              Looks up a localized string similar to On object &quot;{0}&quot;, the value given for  &quot;{1}&quot; ({2}) is not allowed.  Value must be at least {3}..
            </summary>
        </member>
        <member name="P:Jenkon.Core.Workflows.Strings.VALIDATION_MUST_BE_GREATER">
            <summary>
              Looks up a localized string similar to On object &quot;{0}&quot;, the value given for  &quot;{1}&quot; ({2}) is not allowed.  Value must be greater than {3}..
            </summary>
        </member>
    </members>
</doc>
