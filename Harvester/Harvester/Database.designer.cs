#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Harvester
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RedmineReport")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRepository(Repository instance);
    partial void UpdateRepository(Repository instance);
    partial void DeleteRepository(Repository instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::Harvester.Properties.Settings.Default.RedmineConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Repository> Repositories
		{
			get
			{
				return this.GetTable<Repository>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddRepositoryEntry")]
		public ISingleResult<AddRepositoryEntryResult> AddRepositoryEntry([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string branch, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string feature, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string mercurialChangesetId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> createdDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string summary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string files, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string branches, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string bookmarks, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string issueNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), branch, feature, mercurialChangesetId, user, createdDateTime, summary, files, branches, bookmarks, issueNumber);
			return ((ISingleResult<AddRepositoryEntryResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Repository")]
	public partial class Repository : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Branch;
		
		private string _Feature;
		
		private string _URL;
		
		private System.Nullable<bool> _HarvestFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnHarvestFlagChanging(System.Nullable<bool> value);
    partial void OnHarvestFlagChanged();
    #endregion
		
		public Repository()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarvestFlag", DbType="Bit")]
		public System.Nullable<bool> HarvestFlag
		{
			get
			{
				return this._HarvestFlag;
			}
			set
			{
				if ((this._HarvestFlag != value))
				{
					this.OnHarvestFlagChanging(value);
					this.SendPropertyChanging();
					this._HarvestFlag = value;
					this.SendPropertyChanged("HarvestFlag");
					this.OnHarvestFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class AddRepositoryEntryResult
	{
		
		private int _Column1;
		
		public AddRepositoryEntryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
