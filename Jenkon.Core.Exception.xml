<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Jenkon.Core.Exception</name>
    </assembly>
    <members>
        <member name="T:Jenkon.Core.AssertionException">
            <summary>
            application level assertions signifying an unexpected condition in the code.
            </summary>
        </member>
        <member name="T:Jenkon.Core.JenkonException">
            <summary>
            Exception for errors that occur in Jenkon applications
            </summary>
        </member>
        <member name="M:Jenkon.Core.JenkonException.#ctor(System.String)">
            <summary>
            Public constructor
            </summary>
            <param name="message">An informative error message</param>
        </member>
        <member name="M:Jenkon.Core.JenkonException.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.JenkonException.#ctor(System.String,System.Exception)">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.JenkonException.ToString">
            <summary>
            Includes the Guid for the exception.
            </summary>
        </member>
        <member name="P:Jenkon.Core.JenkonException.Guid">
            <summary>
            Unique id for this exception
            </summary>
        </member>
        <member name="M:Jenkon.Core.AssertionException.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.AssertionException.#ctor(System.String)">
            <summary>
            message constructor
            </summary>
            <param name="message">the error message</param>
        </member>
        <member name="T:Jenkon.Core.Assert">
            <summary>
            a collection of utility functions for assertion handling
            these methods can all throw an AssertionException with the
            given error message.  these methods also log the assertion
            for later use
            </summary>
        </member>
        <member name="M:Jenkon.Core.Assert.IsNotNull(System.Object,System.String)">
            <summary>
            asserts that the object is not null
            </summary>
            <param name="o"></param>
            <param name="message"></param>
        </member>
        <member name="M:Jenkon.Core.Assert.IsTrue(System.Boolean,System.String)">
            <summary>
            asserts that the given condition is true
            </summary>
            <param name="condition"></param>
            <param name="message"></param>
        </member>
        <member name="M:Jenkon.Core.Assert.HasValue(System.String,System.String)">
            <summary>
            assert that the given string is not null and has some text
            </summary>
            <param name="str"></param>
            <param name="message"></param>
        </member>
        <member name="M:Jenkon.Core.Assert.NotImplemented">
            <summary>
            Throws a NotImplementedException.
            </summary>
        </member>
        <member name="T:Jenkon.Core.CodeNotUniqueException">
            <summary>
            Exception thrown when a given code is not unique.
            </summary>
        </member>
        <member name="M:Jenkon.Core.CodeNotUniqueException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.CodeNotUniqueException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
            <param name="code"></param>
        </member>
        <member name="T:Jenkon.Core.EmptyStringException">
            <summary>
            Thrown when a string is empty or null
            </summary>
        </member>
        <member name="M:Jenkon.Core.EmptyStringException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.EmptyStringException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
            <param name="message">exception message</param>
        </member>
        <member name="T:Jenkon.Core.NoSuchObjectException">
            <summary>
            Thrown when an object does not exist in the database
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoSuchObjectException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoSuchObjectException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
            <param name="code"></param>
        </member>
        <member name="T:Jenkon.Core.NoSuchCountryException">
            <summary>
            Type-specific extension of ObjectDoesNotExistException
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoSuchCountryException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoSuchCountryException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.NoSuchLanguageException">
            <summary>
            Type-specific extension of ObjectDoesNotExistException
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoSuchLanguageException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoSuchLanguageException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.ValidationException">
            <summary>
            Exception thrown when validation fails
            </summary>
        </member>
        <member name="M:Jenkon.Core.ValidationException.#ctor(System.String)">
            <summary>
            Public constructor
            </summary>
            <param name="message">An informative error message</param>
        </member>
        <member name="M:Jenkon.Core.ValidationException.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.ComponentNotUniqueException">
            <summary>
            Component not unique
            </summary>
        </member>
        <member name="M:Jenkon.Core.ComponentNotUniqueException.#ctor(System.String)">
            <summary>
            Public constructor
            </summary>
            <param name="message">An informative error message</param>
        </member>
        <member name="M:Jenkon.Core.ComponentNotUniqueException.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.ComponentNotUniqueException.#ctor(System.String,System.Exception)">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.CodeNullException">
            <summary>
            Thrown when a null or empty code is received.
            </summary>
        </member>
        <member name="M:Jenkon.Core.CodeNullException.#ctor">
            <summary>
            Default, messageless constructor.
            </summary>
        </member>
        <member name="M:Jenkon.Core.CodeNullException.#ctor(System.String)">
            <summary>
            Creates preset message from the argument name given.
            </summary>
            <param name="argumentName"></param>
        </member>
        <member name="T:Jenkon.Core.IdentifierException">
            <summary>
            Thrown when an error occurs while trying to generate and identifier
            </summary>
        </member>
        <member name="M:Jenkon.Core.IdentifierException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.IdentifierException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
            <param name="message">exception message</param>
        </member>
        <member name="T:Jenkon.Core.NoIdentifierAvailableException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoIdentifierAvailableException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoIdentifierAvailableException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.NoGeneratorDefinedException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoGeneratorDefinedException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoGeneratorDefinedException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.NoGeneratorMatchException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoGeneratorMatchException.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Jenkon.Core.NoGeneratorMatchException.#ctor(System.String)">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="T:Jenkon.Core.ExceptionUtil">
            <summary>
            A collection of utility functions for throwing common exceptions.
            </summary>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.IsNotNull(System.Object,System.String)">
            <summary>
            Throws an exception if the object is null.
            </summary>
            <param name="o">The object to test</param>
            <param name="message">The error message to present</param>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.ArgNotNull(System.Object,System.String)">
            <summary>
            Throws an exception if the object is null.
            </summary>
            <param name="o">The object to test</param>
            <param name="argumentName">The name of the argument</param>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.IsTrue(System.Boolean,System.String)">
            <summary>
            Asserts that the given condition is true.
            </summary>
            <param name="condition">The condition to test</param>
            <param name="message">The error message</param>
            <exception cref="T:Jenkon.Core.JenkonException"/>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.HasValue(System.String,System.String)">
            <summary>
            Checks that the given string is not null and has some text.
            </summary>
            <param name="str">The string to check</param>
            <param name="message">The error message to use</param>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.ArgHasValue``1(``0,System.String)">
            <summary>
            Checks that the given argument is not null and has some value.
            </summary>
            <param name="value">The value to check</param>
            <param name="argumentName">The argument name</param>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.NotImplemented">
            <summary>
            Throws a NotImplementedException.
            </summary>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.ArgConstraint(System.Boolean,System.String)">
            <summary>
            Checks that the argument is true, and if not, throws an argument exception.
            </summary>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.ArgNonZero(System.Int32,System.String)">
            <summary>
            Checks that the argument is nonzero, and if not, throws an argument exception.
            </summary>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.ArgPositive(System.Int32,System.String)">
            <summary>
            Checks that the argument is greater than zero, and if not, throws an argument exception.
            </summary>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.ArgNotNegative(System.Int32,System.String)">
            <summary>
            Checks that the argument is greater than or equal to zero, and if not, throws an argument exception.
            </summary>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.SuchObject``1(``0,System.String)">
            <summary>
            Returns obj, if non-null. If null, throws a NoSuchObjectException(identifier) instead.
            </summary>
        </member>
        <member name="M:Jenkon.Core.ExceptionUtil.ArgumentException``1(System.String)">
            <summary>
            Throws an ArgumentException. Useful because it can be used as an expression
            as opposed to the throw statement, which cannot.
            </summary>
        </member>
        <member name="T:Jenkon.Core.strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.ARG_IS_NEGATIVE">
            <summary>
              Looks up a localized string similar to Argument &quot;{0}&quot; cannot be negative..
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.ARG_IS_ZERO">
            <summary>
              Looks up a localized string similar to Argument &quot;{0}&quot; cannot be zero..
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.ARGUMENT_IS_NULL_OR_EMPTY">
            <summary>
              Looks up a localized string similar to The argument &quot;{0}&quot; cannot be null or an empty string.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.AUDIT_NEEDS_KEY">
            <summary>
              Looks up a localized string similar to Table {0} does not have a primary key, so it cannot be audited..
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.CANNOT_AUDIT_TABLE">
            <summary>
              Looks up a localized string similar to Cannot audit table: {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.CODE_NOT_UNIQUE">
            <summary>
              Looks up a localized string similar to The code &quot;{0}&quot; is not unique.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.COMPONENT_CONFIG_MISSING">
            <summary>
              Looks up a localized string similar to Could not find component configuration file: {0} (Full path: {1}).
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.COMPONENT_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Component not found: {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.CYCLIC_DEPENDENCY">
            <summary>
              Looks up a localized string similar to Type &quot;{0}&quot; and type &quot;{1}&quot; have a circular dependency relationship and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.DELETING_MESSAGE">
            <summary>
              Looks up a localized string similar to Deleting message {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.KERNEL_NO_FACTORY">
            <summary>
              Looks up a localized string similar to No factory has been set within the kernel.  This error is fatal..
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.LOADING_COMPONENTS">
            <summary>
              Looks up a localized string similar to Loading components from {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.LOG_CONFIG_MISSING">
            <summary>
              Looks up a localized string similar to Could not find log configuration file: {0} (Full path: {1}).
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.LOOKUP_COMPONENT">
            <summary>
              Looks up a localized string similar to Component lookup: {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NO_AUDIT_AUDIT">
            <summary>
              Looks up a localized string similar to Cannot audit an audit table.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NO_GENERATOR_DEFINED">
            <summary>
              Looks up a localized string similar to Unable to load an ID Generator that matches the supplied type: {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NO_PRIMARY_KEY">
            <summary>
              Looks up a localized string similar to Table {0} has no primary key.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NO_SUCH_COUNTRY">
            <summary>
              Looks up a localized string similar to The country &quot;{0}&quot; does not exist.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NO_SUCH_LANGUAGE">
            <summary>
              Looks up a localized string similar to The language &quot;{0}&quot; does not exist.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NO_SUCH_OBJECT">
            <summary>
              Looks up a localized string similar to Unable to find corresponding object for code: {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NO_VALUE_FOR_CODE">
            <summary>
              Looks up a localized string similar to No value for code:{0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NOT_IMPLEMENTED">
            <summary>
              Looks up a localized string similar to Not implemented.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.NULL_OR_EMPTY_CODE">
            <summary>
              Looks up a localized string similar to Code is null or empty: {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.REALTIME_INTERRUPTED">
            <summary>
              Looks up a localized string similar to Realtime queue thread interrupted.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.REALTIME_RUNNING">
            <summary>
              Looks up a localized string similar to Realtime qualification thread already running.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.REGISTERED_COMPONENT">
            <summary>
              Looks up a localized string similar to Registered component: {0}.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.REGISTERING_COMPONENT">
            <summary>
              Looks up a localized string similar to Registering component with key &quot;{0}&quot;, interface &quot;{1}&quot;, and implementation &quot;{2}&quot;.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.REQUIRED_FIELD_NULL_OR_EMPTY">
            <summary>
              Looks up a localized string similar to Object &quot;{0}&quot; requires a value for property &quot;{1}&quot;.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.STARTUP">
            <summary>
              Looks up a localized string similar to Jenkon Kernel started.
            </summary>
        </member>
        <member name="P:Jenkon.Core.strings.UNREGISTERED_COMPONENT">
            <summary>
              Looks up a localized string similar to Unregistered component: {0}.
            </summary>
        </member>
    </members>
</doc>
